[
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Construction",
		"code" : "CON",
		"description" : ""
	},
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Finance and Investment",
		"code" : "FIN",
		"description" : ""
	},
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Information Technology",
		"code" : "ICT",
		"description" : ""
	},
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Personal Development",
		"code" : "PER",
		"description" : ""
	},
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Product Development",
		"code" : "PDD",
		"description" : ""
	},
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Software Development",
		"code" : "SWD",
		"description" : ""
	},
	{
		"key" : "PROJECT_TYPE_ENTITY",
		"name" : "Training",
		"code" : "TRN",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "Company Folder",
		"code" : "FOLDER_COMPANY",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "Project Folder",
		"code" : "FOLDER_PROJECT",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "Document Folder",
		"code" : "FOLDER_DOCUMENT",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "Task Folder",
		"code" : "FOLDER_TASK",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "User Folder",
		"code" : "FOLDER_USER",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "General Folder",
		"code" : "FOLDER_GENERAL",
		"description" : ""
	},
	{
		"key" : "FOLDER_TYPE_ENTITY",
		"name" : "Library Folder",
		"code" : "FOLDER_LIBRARY",
		"description" : ""
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "System Requirements Specification",
		"code" : "SYS",
		"description" : "A System Requirements Specification contains the next level of requirements after user requirements. The aim of system requirements is to set precise technical requirements for the system development. System requirements are derived from user requirements by considering existing technology, components and so on."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Generic Project Documennt",
		"code" : "GEN",
		"description" : "This document type is for a generic project document that does not fall under specifications. It may or may not contain requirements. Plans, reports, procudures etc. fall under this category."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Requirements List",
		"code" : "RLS",
		"description" : "This document is a preliminary collection of system requirements that are discovered from interection with stakeholders. The requirements act as an input to the formal SyRS."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "System Design Description",
		"code" : "SYD",
		"description" : "The System/Subsystem Design Description (aka SSDD) describes the system- or subsystem-wide design and the architectural design of a system or subsystem. The SyDD may be supplemented by Interface Design Descriptions  and Database Design Descriptions."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Interface Control Document",
		"code" : "ICD",
		"description" : "Interface Control Document (ICD) is a document that describes the interface(s) to a system or subsystem. It may describe the inputs and outputs of a single system or the interface between two systems or subsystems. It can be very detailed or pretty high level, but the point is to describe all inputs to and outputs from a system."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Verification Requirements Specification",
		"code" : "VRS",
		"description" : "The Verification Requirements Specification (VRS) describes the qualities of the evidence required that a set of requirements defining an item is satisfied. The item may be of any nature whatsoever, ranging from, for example, a physical object, to software, to an interface, to a data item, to a material, or to a service."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Interface Requirements Specification",
		"code" : "IRS",
		"description" : "Interface Requirements Specification (IRS) specifies the requirements imposed on one or more systems, subsystems, Hardware Configuration Items (HWCIs), Computer Software Configuration Items (CSCIs), manual operations, or other system components to achieve one or more interfaces among these entities."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Software Requirements Specification",
		"code" : "SRS",
		"description" : "A software requirements specification (SRS) is a description of a software system to be developed. It lays out functional and non-functional requirements, and may include a set of use cases that describe user interactions that the software must provide."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "User Requirements Specification",
		"code" : "URS",
		"description" : "A User Requirements Specification (a.k.a. Stakeholder Requirements Specification) specifies the requirements the user expects from the system to be constructed. User Requirements are the top level of requirements. They capture the needs of users, the customer and other sources of requirements like legal regulations and internal company high level requirements."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Software Design Description",
		"code" : "SDD",
		"description" : "A software design description (aka software design document or SDD) is a written description of a software product, that a software designer writes in order to give a software development team overall guidance to the architecture of the software project."
	},
	{
		"key" : "DOCUMENT_TYPE_ENTITY",
		"name" : "Stakeholder Requirements Specification",
		"code" : "STS",
		"description" : "A Stakeholder Requirements Specification identifies the technical specifications for the selected systemof-interest and usability for the envisaged human-system interaction."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Legal Requirement",
		"code" : "LEG",
		"description" : "A legal requirement is a non-functional requirement that states a regulation that must be recognized by the system. Regulations could be laws, standards, specifications, etc."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Design Requirement",
		"code" : "DSN",
		"description" : "Design requirements direct the design (internals of the system), by inclusion (build it this way), or exclusion (don't build it this way)."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Constraint Requirement",
		"code" : "CON",
		"description" : "Constraint Requirement describes real-world limits or boundaries around what we want to happen."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Unclassified Requirement",
		"code" : "UNC",
		"description" : "Requirements not classified."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Adaptability Requirement",
		"code" : "ADP",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Not a Requirement",
		"code" : "NAN",
		"description" : "Prose textual information for clarification and context setting for a set of requirements."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "User Story",
		"code" : "UST",
		"description" : "A (user) story is a special kind of functional requirement, which uses one or more sentences in the everyday or business language of the end user that captures what the user (resp. a role) wants to achieve. User stories generally follow the following template: \\\"As a <role>, I want <goal/desire> so that <benefit>.\\\""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Usability Requirement",
		"code" : "USB",
		"description" : "A usability requirement is a non-functional requirement describing the intended ease of use (ergonomical comfort) and learnability of the system."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Operational Requirement",
		"code" : "OPS",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Cost and Schedule Constraint",
		"code" : "COS",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Maintainability Requirement",
		"code" : "MAN",
		"description" : "A maintainability requirement is a non-functional requirement that describes the ease with which the system can be maintained in order to isolate defects or their cause, correct defects or their cause, meet new requirements, make future maintenance easier, or cope with a changed environment."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Security Requirement",
		"code" : "SCT",
		"description" : "A security requirement is a non-functional requirement that describes the stipulated degree of the systems protection against danger, damage, misuse, unauthorized access, data loss and crime."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Functional Requirement",
		"code" : "FCN",
		"description" : "A functional requirement describes a function of the system, i.e. what the system must do resp. a service the system provides to its users."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Logistical Requirement",
		"code" : "LOG",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Scalability Requirement",
		"code" : "SCL",
		"description" : "A scalability requirement is a non-functional requirement that describes the ability of the system to handle growing amounts of work in a graceful manner or its ability to be enlarged to accommodate that growth."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Environment Requirement",
		"code" : "ENV",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "States/Modes Requirement",
		"code" : "SMR",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Resource Requirement",
		"code" : "REC",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "External Interface Requirement",
		"code" : "EXI",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Physical Requirement",
		"code" : "PHY",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Performance Requirement",
		"code" : "PEF",
		"description" : "A performance requirement is a non-functional requirement that describes the amount of useful work accomplished by the system compared to the time and resources used."
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Other Quality Requirement",
		"code" : "OTH",
		"description" : ""
	},
	{
		"key" : "ITEM_TYPE_ENTITY",
		"name" : "Policy and Regulations",
		"code" : "POL",
		"description" : ""
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Decomposition",
		"code" : "DEC",
		"description" : "Is a Decomposition Of: Captures part-whole relationships between requirement artifacts. Typically, these types of links represent artifact hierarchies."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Refines",
		"code" : "REF",
		"description" : ""
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Referenced",
		"code" : "RFD",
		"description" : "Referenced By or References: Tracks a relationship between requirement artifacts. These types of relationships occur when creating links between artifacts."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Mitigates",
		"code" : "MTG",
		"description" : "Captures the relationship between requirements and risks. A requirement mitigates one or more risks, and a risk is mitigated by one or more requirements."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Links",
		"code" : "LKT",
		"description" : "Links To: Tracks a general relationship between requirement artifacts."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Refers",
		"code" : "RFT",
		"description" : "Refers To"
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Embedded",
		"code" : "EMB",
		"description" : "Is Embedded In: Tracks a containment relationship between RM artifacts. These types of relationships occur when you complete operations such as inserting an artifact and inserting an image for a text artifact."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Illustrates",
		"code" : "ILS",
		"description" : "Illustrates the relationships between graphical and text artifacts."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Extracted",
		"code" : "EXR",
		"description" : "Is Extracted From: Captures when the content of a requirement artifact was created from the contents of another requirement artifact. This type of link is created during extraction-based operations; for example, when you create an artifact by saving an existing artifact as a new artifact."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Satisfies",
		"code" : "SAT",
		"description" : "Satisfies or Is satisfied By: Captures how the different levels of requirements are elaborated. For example: an approved vision statement in a vision document can be satisfied by one or more stakeholder requirements."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Tracks",
		"code" : "TRK",
		"description" : "Tracks or Is Tracked By: Captures the relationship between a requirement artifact and a change management item that tracks the implementation of the requirement artifact. For example, a task in the CCM application can track the implementation of a requirement artifact. In the CCM application, links of this type are shown as Tracks links."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Derived",
		"code" : "DRV",
		"description" : "Is Derived From: Captures the relationship between a requirement artifact and an architecture management item that represents a model of the requirement artifact. For example, a UML use case in an architecture management application can represent a requirement artifact. In architecture management applications, links of this type are shown as Derives From Architecture Element links"
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Affected",
		"code" : "AFD",
		"description" : "Is Affected By: Captures the relationship between a requirement artifact and a change management item that affects the implementation of the requirement artifact. For example, a defect in the Change and Configuration Management (CCM) application can affect the implementation of a requirement artifact. In the CCM application, links of this type are shown as Affects links."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Validates",
		"code" : "VLD",
		"description" : "Captures the relationship between a requirement artifact and a test artifact that validates the implementation of the requirement artifact. For example, a test plan in the Quality Management (QM) application can validate the implementation of a requirement artifact. In the QM application, links of this type are displayed as Validates links."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Constrained",
		"code" : "CON",
		"description" : "Is Constrained By: Captures the relationship between requirement artifacts when one artifact limits or holds back the other artifact. For example, an artifact can be constrained by a requirement that it must conform to."
	},
	{
		"key" : "LINK_TYPE_ENTITY",
		"name" : "Implements",
		"code" : "IML",
		"description" : "Captures the relationship between a requirement artifact and a change management item that describes the implementation of the requirement artifact. For example, a story in the CCM application can describe the implementation of a requirement artifact. In the CCM application, links of this type are shown as Implements links."
	}
]
